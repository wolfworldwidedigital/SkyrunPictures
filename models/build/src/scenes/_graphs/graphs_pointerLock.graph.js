"use strict";
/**
 * Generated by the Babylon.JS Editor v4.7.0
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.IsGraphAttached = exports.IsGraph = void 0;
var core_1 = require("@babylonjs/core");
/**
 * Tells that this script has been generated by a graph.
 */
exports.IsGraph = true;
/**
 * Tells wether or not the graph has been attached to at least one node or not.
 */
exports.IsGraphAttached = false;
/**
 * Defines the generated class of the graph.
 */
var GraphClass = /** @class */ (function () {
    /**
     * Constructor.
     * @param scene defines the scene where the graph is running.
     */
    function GraphClass(_scene, _attachedObject) {
        this._scene = _scene;
        this._attachedObject = _attachedObject;
    }
    /**
     * Called on the scene starts.
     */
    GraphClass.prototype.onStart = function () {
        var _this = this;
        this._scene.onPointerObservable.add(function (ev) {
            if (ev.type !== core_1.PointerEventTypes.POINTERTAP) {
                return;
            }
            if (!_this._scene.getEngine().isPointerLock) {
                _this._scene.getEngine().enterPointerlock();
            }
        });
        this._scene.onKeyboardObservable.add(function (ev) {
            if (ev.type !== core_1.KeyboardEventTypes.KEYUP) {
                return;
            }
            if (ev.event.keyCode === 27) {
                if (_this._scene.getEngine().isPointerLock) {
                    _this._scene.getEngine().exitPointerlock();
                }
            }
        });
    };
    /**
     * Called each frame.
     */
    GraphClass.prototype.onUpdate = function () {
    };
    /**
     * Returns the reference to the current scene the graph is running.
     */
    GraphClass.prototype.getScene = function () {
        return this._scene;
    };
    /**
     * Returns the reference to the object the graph is attached to.
     */
    GraphClass.prototype.getAttachedObject = function () {
        return this._attachedObject;
    };
    return GraphClass;
}());
exports.default = GraphClass;
//# sourceMappingURL=graphs_pointerLock.graph.js.map